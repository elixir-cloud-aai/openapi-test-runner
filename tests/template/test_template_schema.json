{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "description": "The YAML test file object",
  "properties": {
    "name": {
      "type": "string",
      "description": "The name of the Test file"
    },
    "description": {
      "type": "string",
      "description": "The description of the Test file"
    },
    "service": {
      "type": "string",
      "description": "The GA4GH service name",
      "enum": [
        "TES"
      ]
    },
    "versions": {
      "type": "array",
      "description": "The list of API versions against which the test file can be run",
      "items": {
        "type": "string"
      }
    },
    "tags": {
      "type": "array",
      "description": "The list of tags which define the test file. Example. Logical - No Polling needed, Functional - Polling needed. Always add 3 tags - Individual tag based on test name, TES endpoint tag and All tag",
      "items": {
        "type": "string"
      }
    },
    "jobs": {
      "type": "array",
      "description": "The sub-job data containing request details",
      "items": {
        "type": "object",
        "description": "The sub-job object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The sub-job name. It should be within the specified enum for consistency",
            "enum": [
              "service_info",
              "list_tasks",
              "create_task",
              "get_task",
              "cancel_task"
            ]
          },
          "description": {
            "type": "string",
            "description": "The sub-job description"
          },
          "endpoint": {
            "type": "string",
            "description": "The request endpoint. It should be within the specified enum for consistency",
            "enum": [
              "/service-info",
              "/tasks",
              "/tasks/{id}",
              "/tasks/{id}:cancel"
            ]
          },
          "operation": {
            "type": "string",
            "description": "The HTTP operation for the request",
            "enum": [
              "GET",
              "POST"
            ]
          },
          "query_parameters": {
            "type": "array",
            "description": "The query parameters to be sent along with the request",
            "items": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "polling": {
            "type": "object",
            "description": "The polling object containing polling configuration",
            "properties": {
              "interval": {
                "type": "number",
                "description": "The polling interval between each request in seconds"
              },
              "timeout": {
                "type": "number",
                "description": "The polling timeout in seconds"
              }
            },
            "required": [
              "interval",
              "timeout"
            ]
          },
          "env_vars": {
            "type": "object",
            "description": "Provide user-defined environment variables",
            "additionalProperties": true
          },
          "request_body": {
            "type": "string",
            "description": "The request body for the request"
          },
          "storage_vars": {
            "type": "object",
            "description": "Extract values from response and store into provided keys. Provide location of key from response root in dot notation",
            "additionalProperties": true
          },
          "filter": {
            "type": "array",
            "description": "The list of filters to be applied on API data",
            "items": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "The API data key path to filter the value. Provide location of key from root in dot notation"
                },
                "type": {
                  "type": "string",
                  "description": "The data type of the response field to filter",
                  "enum": [
                    "string",
                    "array",
                    "object"
                  ]
                },
                "regex": {
                  "type": "boolean",
                  "description": "Filter the string value via regex. Should be used only with \"string\" type"
                },
                "value": {
                  "type": "string",
                  "description": "The value to be filtered. For object, it checks if provided value is subset of filtered response field, regardless of the key-value pairs order."
                },
                "size": {
                  "type": "integer",
                  "description": "The size of the response field is interpreted differently for each type of data. For a string, it refers to the length of the string; for an array, it refers to the size of the array; and for an object, it refers to the number of key-value pairs in the object."
                }
              },
              "required": [
                "path",
                "type"
              ]
            },
          },
          "response": {
            "type": "object",
            "description": "The expected response status for the given endpoint details",
            "additionalProperties": true
          }
        },
        "required": [
          "name",
          "endpoint",
          "operation",
          "response"
        ]
      }
    }
  },
  "required": [
    "name",
    "service",
    "versions",
    "tags",
    "jobs"
  ]
}